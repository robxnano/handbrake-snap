name: handbrake-gui # Change to 'handbrake' for official release
adopt-info: handbrake
grade: stable
confinement: strict
base: core24
compression: lzo
platforms:
  amd64:
  arm64:

apps:
  handbrake-gui: # Change to 'handbrake' for official release
    command: usr/bin/ghb
    common-id: fr.handbrake.ghb.desktop
    desktop: usr/share/applications/fr.handbrake.ghb.desktop
    extensions: [gnome]
    plugs:
      - home
      - removable-media
      - screen-inhibit-control
      - upower-observe
    environment:
      GDK_DEBUG: portals
      LIBVA_DRIVERS_PATH: $SNAP/intel-plugin/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/intel-plugin/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}
  cli:
    command: usr/bin/HandBrakeCLI
    common-id: fr.handbrake.HandBrakeCLI
    extensions: [gnome]
    plugs:
      - home
      - removable-media
    environment:
      LIBVA_DRIVERS_PATH: $SNAP/intel-plugin/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}/dri
      LD_LIBRARY_PATH: $LD_LIBRARY_PATH:$SNAP/intel-plugin/lib/${CRAFT_ARCH_TRIPLET_BUILD_FOR}

# Allows plugins for hardware acceleration to be mounted
plugs:
  intel-0-2404: # plugin_name-api_version-ubuntu_base
    interface: content
    content: intel-0-2404
    target: $SNAP/intel-plugin/lib

parts:
  # libdovi needs a newer toolchain than Ubuntu 24.04 provides
  rust-toolchain:
    plugin: nil
    override-pull: |
      craftctl default
      curl https://sh.rustup.rs -sSf | sh -s -- -y --profile minimal
    override-build: |
      source "$HOME/.cargo/env"
      craftctl default
      cargo install cargo-c
    build-packages:
      - libssl-dev
      - pkg-config
      - zlib1g-dev
    prime:
      - -**/*

  handbrake:
    after: [rust-toolchain]
    source-type: git
    source: https://github.com/HandBrake/HandBrake.git
    source-tag: '1.9.2'
    parse-info: [usr/share/metainfo/fr.handbrake.ghb.metainfo.xml]
    plugin: make
    build-environment:
      - CC: 'cc'
      - CXX: 'c++'
    override-pull: |
      craftctl default
      git apply ${CRAFT_PROJECT_DIR}/handbrake-snap.patch
      craftctl set version="$(gtk/data/version.py)"
    override-build: |
      source "$HOME/.cargo/env"
      cd ..
      rm -rf build
      mkdir -p build
      cd build
      if [ "$CRAFT_ARCH_BUILD_FOR" = "amd64" ]; then
        FLAG_QSV=--enable-qsv
      else
        FLAG_QSV=--disable-qsv
      fi
      ${CRAFT_PART_SRC}/configure --snap --prefix=/usr "$FLAG_QSV" --enable-nvenc --enable-nvdec --enable-vce --enable-libdovi
      craftctl default
    build-packages:
      - autoconf
      - automake
      - autopoint
      - clang
      - cmake
      - curl
      - libbz2-dev
      - libicu-dev
      - libjansson-dev
      - libmp3lame-dev
      - libnuma-dev
      - libopus-dev
      - libspeex-dev
      - libtheora-dev
      - libtool
      - libtool-bin
      - libvorbis-dev
      - libvpx-dev
      - nasm
    prime:
      - -usr/etc
      - -usr/include
      - -usr/lib/*/cmake
      - -usr/lib/*/lib*.a
      - -usr/lib/*/lib*.la
      - -usr/lib/*/lib*.so
      - -usr/lib/*/pkgconfig
      - -usr/lib/pkgconfig
      - -usr/share/doc
      - -usr/share/ffmpeg
      - -usr/share/vpl

  # Find files provided by the base and platform snap and ensure they aren't
  # duplicated in this snap
  cleanup:
    after: [handbrake]
    plugin: nil
    build-snaps: [core24, gtk-common-themes, gnome-46-2404]
    override-prime: |
      set -eux
      for snap in "core24" "gtk-common-themes" "gnome-46-2404"; do
        cd "/snap/$snap/current" && find . -type f,l -name *.so.* -exec rm -f "$CRAFT_PRIME/{}" \;
      done
